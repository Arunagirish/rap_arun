managed with additional save implementation in class zbp_i_lfa1_2 unique;
strict ( 2 );
with draft;
define behavior for ZI_lfa1_2 //alias <alias_name>
draft table zdlfa1_2
persistent table zlfa1
lock master
total etag Changed_on
authorization master ( instance,global )
etag master Changed_on
{

  draft action edit with additional implementation;
  draft action activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;

   determination modify_determination on modify{field Name1;}
  determination save_determination on save{delete;}
  validation date on save { create; }
  action(precheck)  ins_non_factory parameter ZI_D_ABSTRACT result[1] $self;
  static action static_non_factory ;
  factory action ins_factory[1];
  static factory action static_factory[1];
  function ins_function result[1] $self;
  static function static_function result[1] $self;
  save(adjustnumbers) action save_action;

  create{ default function GetDefaultsForCreate; }
  update(precheck);
  delete;
  field ( numbering : managed, readonly) Lifnr;

  association _lfb1 { create;with draft; }
    mapping for zlfa1
  {
  Lifnr = lifnr;
  Land1 = land1;
  Name1 = name1;
  Changed_on = changed_on;
  }
}

define behavior for ZI_lfb1_2 //alias <alias_name>
draft table zlfb1_2
persistent table zlfb1
lock dependent by _lfa1
authorization dependent by _lfa1
etag dependent by _lfa1
{
  update;
  delete;
  field(readonly)Lifnr;
  field ( numbering : managed, readonly )Bukrs;
  association _lfa1{ with draft; }

   mapping for zlfb1
  {
  Lifnr = lifnr;
  Bukrs = bukrs;
  }
}